{"version":3,"sources":["assets/pics/snake.gif","assets/pics/coin.gif","utils/constants.js","components/navbar/Navbar.jsx","components/start-btn.jsx","components/gameover/GameOver.jsx","components/score/Score.jsx","components/Game.js","helper/useInterval.js","App.js","index.js"],"names":["module","exports","CANVAS_SIZE","SNAKE_START","FOOD_START","DIRECTIONS","40","39","38","37","Navbar","className","href","src","snake","alt","id","ButtonStart","props","onClick","start","GameOver","Score","coin","score","Game","canvasRef","useRef","useState","setSnake","food","setFood","dir","setDir","speed","setSpeed","gameOver","setGameOver","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","gameLoop","createFood","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","levelUp","length","newSnake","newFood","checkFoodCollision","pop","context","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","role","tabIndex","onKeyDown","e","keyCode","moveSnake","ref","width","height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7fe29d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snake.10979309.gif\";","module.exports = __webpack_public_path__ + \"static/media/coin.a0862539.gif\";","const CANVAS_SIZE = [400, 400];\nconst SNAKE_COLOR = '#750505';\nconst FOOD_COLOR = '#02497b';\nconst SNAKE_START = [\n    [4, 3],\n    [4, 4]\n];\nconst FOOD_START = [2, 1];\nconst SCALE = 20;\nconst SPEED = 260;\nconst DIRECTIONS = {\n    40: [0, 1], // down\n    39: [1, 0], // right\n    38: [0, -1], // up\n    37: [-1, 0] // left\n};\n\nexport {\n    CANVAS_SIZE,\n    SNAKE_COLOR,\n    FOOD_COLOR,\n    SNAKE_START,\n    FOOD_START,\n    SCALE,\n    SPEED,\n    DIRECTIONS\n};","import React from \"react\";\nimport \"./Navstyle.css\"\nimport snake from \"../../assets/pics/snake.gif\"\n\nconst Navbar = () => {\n    return (\n        <nav className=\"nav-wraper lighten-2\">\n            <div className=\"container\">\n                <a href=\"#!\" className=\"navClass\">Snake Game</a>\n                <img className=\"pic\" src={snake} alt=\"snake\" />\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"../assets/style/buttonStyle.css\"\nconst ButtonStart = (props) => {\n\n    return (\n        <button className=\"buttonStart btn btn-dark\"\n            onClick={props.start}>Start Game\n        </button>\n    );\n}\n\nexport default ButtonStart;","import React from \"react\";\nimport \"./gamoverstyle.css\"\nconst GameOver = (props) => {\n\n    return (\n        <div className=\"gameover\">\n            <p>GAME OVER!\n            </p> </div>\n    );\n}\n\nexport default GameOver;","import React from \"react\";\nimport \"./Score.css\"\nimport coin from \"../../assets/pics/coin.gif\"\n\nconst Score = (props) => {\n\n    return (\n        <div className=\"scoreWrap\">\n\n            <p className=\"score\"> <img className=\"picC\" src={coin} alt=\"coin\" /> Your score: {props.score}</p>\n\n        </div>\n    );\n}\n\nexport default Score;","import React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"../helper/useInterval\";\nimport {\n    CANVAS_SIZE,\n    SNAKE_COLOR,\n    FOOD_COLOR,\n    SNAKE_START,\n    FOOD_START,\n    SCALE,\n    SPEED,\n    DIRECTIONS\n} from \"../utils/constants\";\nimport Navbar from \"./navbar/Navbar\";\nimport ButtonStart from \"./start-btn\";\nimport GameOver from \"./gameover/GameOver\";\nimport Score from \"./score/Score\";\nimport \"../assets/style/Game.css\"\n/* eslint-disable */\n\nconst Game = () => {\n    const canvasRef = useRef();\n    const [snake, setSnake] = useState(SNAKE_START);\n    const [food, setFood] = useState(FOOD_START);\n    const [dir, setDir] = useState([0, -1]);\n    const [speed, setSpeed] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    useInterval(() => gameLoop(), speed);\n\n    const startGame = () => {\n        setSnake(SNAKE_START);\n        setFood(FOOD_START);\n        setDir([0, -1]);\n        setSpeed(SPEED);\n        setGameOver(false);\n    };\n\n    const levelUp = (snake) => {\n        if (snake >= 4 && snake <= 5)\n            setSpeed(185);\n        if (snake === 6)\n            setSpeed(170);\n        if (snake === 7)\n            setSpeed(160);\n        if (snake === 8)\n            setSpeed(150);\n        if (snake === 9)\n            setSpeed(140);\n        if (snake === 10)\n            setSpeed(130);\n        if (snake === 11)\n            setSpeed(120);\n        if (snake > 11 && snake <= 13)\n            setSpeed(110);\n        if (snake > 13 && snake <= 15)\n            setSpeed(105);\n        if (snake > 15 && snake <= 17)\n            setSpeed(100);\n        if (snake > 17 && snake <= 19)\n            setSpeed(95);\n        if (snake > 19 && snake <= 21)\n            setSpeed(85);\n        if (snake > 21 && snake <= 23)\n            setSpeed(80);\n        if (snake > 23 && snake <= 25)\n            setSpeed(70);\n        if (snake > 25 && snake <= 27)\n            setSpeed(60);\n        if (snake > 27)\n            setSpeed(50);\n    }\n\n    const endGame = () => {\n        setSpeed(null);\n        setGameOver(true);\n    };\n\n    const moveSnake = ({ keyCode }) => {\n        // up\n        if (dir[0] === 0 && dir[1] === -1)\n            keyCode >= 37 && keyCode <= 39 && setDir(DIRECTIONS[keyCode]);\n        // down\n        if (dir[0] === 0 && dir[1] === 1)\n            keyCode >= 39 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]) || keyCode === 37 && setDir(DIRECTIONS[keyCode]);\n        // right\n        if (dir[0] === 1 && dir[1] === 0)\n            keyCode >= 38 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n        // left\n        if (dir[0] === -1 && dir[1] === 0)\n            keyCode >= 37 && keyCode <= 38 && setDir(DIRECTIONS[keyCode]) || keyCode === 40 && setDir(DIRECTIONS[keyCode]);\n    }\n\n    const createFood = () =>\n        food.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\n    const checkCollision = (piece, snk = snake) => {\n        if (\n            piece[0] * SCALE >= CANVAS_SIZE[0] ||\n            piece[0] < 0 ||\n            piece[1] * SCALE >= CANVAS_SIZE[1] ||\n            piece[1] < 0\n        )\n            return true;\n\n        for (const segment of snk) {\n            if (piece[0] === segment[0] && piece[1] === segment[1])\n                return true;\n        }\n        return false;\n    };\n\n    const checkFoodCollision = newSnake => {\n        if (newSnake[0][0] === food[0] && newSnake[0][1] === food[1]) {\n            let newFood = createFood();\n            while (checkCollision(newFood, newSnake)) {\n                newFood = createFood();\n            }\n            setFood(newFood);\n            return true;\n        }\n        return false;\n    };\n\n    const gameLoop = () => {\n        const snakeCopy = JSON.parse(JSON.stringify(snake));\n        const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n        snakeCopy.unshift(newSnakeHead);\n        levelUp(snake.length);\n        if (checkCollision(newSnakeHead)) endGame();\n        if (!checkFoodCollision(snakeCopy)) snakeCopy.pop();\n        setSnake(snakeCopy);\n    };\n\n    useEffect(() => {\n        const context = canvasRef.current.getContext(\"2d\");\n        context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n        context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        context.fillStyle = SNAKE_COLOR;\n        snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n        context.fillStyle = FOOD_COLOR;\n        context.fillRect(food[0], food[1], 1, 1);\n    }, [snake, food, gameOver]);\n\n    return (\n        <div>\n            <Navbar />\n            <br />\n            <div className=\"wrapper center-align\">\n                <div className=\"gameover\">\n                    {gameOver && <GameOver />}\n                </div>\n                <br />\n                <Score score={snake.length - 2} />\n                <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)}>\n                    <canvas\n                        className=\"canvas col-xs-4 col-sm-4\"\n                        ref={canvasRef}\n                        width={`${CANVAS_SIZE[0]}px`}\n                        height={`${CANVAS_SIZE[1]}px`}\n                    />\n                    <br /><br />\n                    <ButtonStart start={() => startGame()} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Game;","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}","import React from 'react';\r\nimport Game from './components/Game';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div>\r\n            <Game />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}